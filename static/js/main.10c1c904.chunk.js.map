{"version":3,"sources":["utils/styleUtil.js","components/Flex/index.jsx","components/Typo/index.js","components/Avatar/styles.js","components/Link/index.js","Constants.js","utils/ResponseHandler.js","utils/logger.js","components/Avatar/index.jsx","logic/UserLogic.js","hooks/useI18n.js","context/LanguageContext.js","components/LanguageSelector/styles.js","components/LanguageSelector/index.jsx","pages/Bio.jsx","utils/dateUtil.js","pages/Contact.jsx","hooks/useTypingMachine.js","pages/PageStyles.js","pages/Profile.jsx","components/ProjectCard/styles.js","components/ProjectCard/index.jsx","mobx/ProjectsStore.js","pages/Projects.jsx","pages/AppContainer.jsx","components/IntlProvider/index.jsx","globalStyles.js","theme.js","App.js","index.js"],"names":["extractProp","propName","attributeName","props","value","undefined","prepareRules","config","keys","Object","map","key","rules","display","width","maxWidth","minHeight","justifyContent","alignItems","backgroundColor","direction","shrink","grow","Flex","styled","div","theme","spacing","default","defaultProps","size","Title","h1","sizes","XL","Subtitle","h2","L","Typo","p","color","secondaryTextIcons","CircleContainer","background","media","tablet","InputPlaceholder","Image","img","show","Link","a","accent","DEFAULT_LOCALE","API_URL","PROFILES_LINKS","LANGUAGES","fetchURL","url","options","fetch","response","ok","status","json","data","Promise","reject","logger","createLogger","format","simple","Avatar","username","useState","loading","setLoading","imageUrl","setImageUrl","useEffect","fetchUser","then","user","avatar_url","catch","error","src","onLoad","setTimeout","useI18n","intl","useIntl","__","id","description","defaultMessage","rest","formatMessage","LanguageContext","React","createContext","LanguageProvider","children","language","setLanguage","Provider","Button","button","sizing","active","LanguageSelector","useContext","languages","onClick","locale","ReactGA","event","category","action","Container","TitleComponent","Text","medium","Bio","useTheme","count","startingYear","Date","getFullYear","getExperience","darkBackground","LinkComponent","spaceAround","Contact","iconSize","href","target","useTypingMachine","words","typeDelay","wordDelay","currentIndex","setCurrentIndex","isDeleting","setIsDeleting","setDisplay","delta","setDelta","index","length","fullText","nextCharIndex","nextDelta","parseInt","Math","random","timeout","substring","clearTimeout","ProfileCodeText","span","CardGrid","desktop","HEART","String","fromCharCode","Profile","Card","shadow","CardHeader","Icon","FaGithub","ProjectCard","name","html_url","sortByUpdatedAt","b","updated_at","store","projects","lastFetched","makeObservable","this","observable","setProjects","bound","setLastFetched","latestProjects","computed","slice","sort","Projects","observer","ProjectsStore","repos","item","AppContainer","IntlProvider","enUS","messages","setMessages","ptBR","defaultLocale","GlobalStyle","createGlobalStyle","primaryText","M","S","XS","XXS","number","lightBackground","small","initialize","pageview","window","location","pathname","search","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10c1c904.chunk.js","sourcesContent":["export const extractProp = (propName, attributeName) => (props) => {\r\n  const value = props[propName]\r\n  if (value !== undefined) {\r\n    return `${attributeName}: ${value};`\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport const prepareRules = (config = {}) => {\r\n  const keys = Object.keys(config)\r\n  return keys.map((key) => extractProp(key, config[key]))\r\n}\r\n","import styled from 'styled-components'\r\nimport { prepareRules } from '../../utils/styleUtil'\r\n\r\nconst rules = prepareRules({\r\n  display: 'display',\r\n  width: 'width',\r\n  maxWidth: 'max-width',\r\n  minHeight: 'min-height',\r\n  justifyContent: 'justify-content',\r\n  alignItems: 'align-items',\r\n  backgroundColor: 'background-color',\r\n  direction: 'flex-direction',\r\n  shrink: 'flex-shrink',\r\n  grow: 'flex-grow',\r\n})\r\n\r\nconst Flex = styled.div`\r\n  padding: ${(props) => props.theme.spacing.default};\r\n  ${rules}\r\n`\r\n\r\nFlex.defaultProps = {\r\n  direction: 'column',\r\n  display: 'flex',\r\n}\r\n\r\nexport default Flex\r\n","import styled from 'styled-components'\r\nimport { prepareRules } from '../../utils/styleUtil'\r\n\r\nconst rules = prepareRules({\r\n  size: 'font-size',\r\n})\r\nexport const Title = styled.h1`\r\n  font-size: ${(props) => props.theme.sizes.XL};\r\n  ${rules}\r\n`\r\n\r\nexport const Subtitle = styled.h2`\r\n  font-size: ${(props) => props.theme.sizes.L};\r\n  ${rules}\r\n`\r\n\r\nconst Typo = styled.p`\r\n  color: ${(props) => props.theme.color.secondaryTextIcons};\r\n  ${rules}\r\n`\r\n\r\nexport default Typo\r\n","import styled from 'styled-components'\r\nimport Flex from '../Flex'\r\n\r\nexport const CircleContainer = styled(Flex)`\r\n  padding: 0;\r\n  background: ${({ theme }) => theme.color.background};\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n\r\n  width: 50vw;\r\n  height: 50vw;\r\n\r\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\r\n    width: 15rem;\r\n    height: 15rem;\r\n  }\r\n\r\n  margin-bottom: ${({ theme }) => theme.spacing.default};\r\n`\r\n\r\nexport const InputPlaceholder = styled(Flex)`\r\n  margin-top: ${({ theme }) => theme.spacing.default};\r\n  width: 15rem;\r\n  background: ${({ theme }) => theme.color.background};\r\n`\r\n\r\nexport const Image = styled.img`\r\n  display: ${(props) => (props.show ? 'block' : 'none')};\r\n  width: 50vw;\r\n  height: 50vw;\r\n\r\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\r\n    width: 15rem;\r\n    height: 15rem;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nconst Link = styled.a`\r\n  color: ${({ theme }) => theme.color.secondaryTextIcons};\r\n  text-decoration: none;\r\n  transition: all 0.15s ease-in-out;\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => theme.color.accent};\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nexport default Link\r\n","export const DEFAULT_LOCALE = 'en-US'\r\n\r\nexport const API_URL = 'https://api.github.com'\r\n\r\nexport const PROFILES_LINKS = {\r\n  LINKED_IN: 'https://linkedin.com/in/mesaquen',\r\n  GITHUB: 'https://github.com/mesaquen',\r\n  DEV: 'https://dev.to/mesaquen',\r\n}\r\n\r\nexport const LANGUAGES = {\r\n  'pt-BR': 'pt-BR',\r\n  'en-US': 'en-US',\r\n}\r\n","export const fetchURL = async (url, options) => {\r\n  const response = await fetch(url, options)\r\n  const { ok, status } = response\r\n  const data = await response.json()\r\n\r\n  if (ok) {\r\n    return data\r\n  }\r\n\r\n  return Promise.reject({ ok, status, ...data })\r\n}\r\n","import { createLogger, format, transports } from 'winston'\r\n\r\nconst logger = createLogger({\r\n  format: format.simple(),\r\n})\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  logger.add(new transports.Console())\r\n}\r\n\r\nexport default logger\r\n","import React, { useEffect, useState } from 'react'\r\nimport Flex from '../Flex'\r\nimport { Subtitle as Typo } from '../Typo'\r\nimport { CircleContainer, InputPlaceholder, Image } from './styles'\r\nimport Link from '../Link'\r\nimport { fetchUser } from '../../logic/UserLogic'\r\nimport logger from '../../utils/logger'\r\n\r\nconst Avatar = ({ username, ...props }) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [imageUrl, setImageUrl] = useState('')\r\n\r\n  useEffect(() => {\r\n    fetchUser(username)\r\n      .then((user) => {\r\n        setImageUrl(user?.avatar_url)\r\n      })\r\n      .catch(logger.error)\r\n  }, [username])\r\n\r\n  return (\r\n    <Flex alignItems=\"center\">\r\n      <CircleContainer>\r\n        <Image\r\n          src={imageUrl}\r\n          onLoad={() => setTimeout(() => setLoading(false), 1000)}\r\n          show={!loading}\r\n        />\r\n      </CircleContainer>\r\n      {loading ? (\r\n        <InputPlaceholder />\r\n      ) : (\r\n        <Link>\r\n          <Typo>{`@${username}`}</Typo>\r\n        </Link>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Avatar\r\n","import { API_URL } from '../Constants'\r\nimport { fetchURL } from '../utils/ResponseHandler'\r\n\r\nexport const fetchUser = (username) => fetchURL(`${API_URL}/users/${username}`)\r\n\r\nexport const fetchUserRepos = (username) =>\r\n  fetchURL(`${API_URL}/users/${username}/repos`)\r\n","import { useIntl } from 'react-intl'\r\n\r\nconst useI18n = () => {\r\n  const intl = useIntl()\r\n\r\n  const getMessage = (id, options = {}) => {\r\n    const { description, defaultMessage, ...rest } = options\r\n    return intl.formatMessage({ id, description, defaultMessage }, rest)\r\n  }\r\n  return { __: getMessage }\r\n}\r\n\r\nexport default useI18n\r\n","import React, { useState } from 'react'\r\nimport { DEFAULT_LOCALE } from 'Constants'\r\n\r\nconst LanguageContext = React.createContext(DEFAULT_LOCALE)\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState(DEFAULT_LOCALE)\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, setLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport default LanguageContext\r\n","import styled from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  padding: ${({ theme }) => theme.sizing(0.5)};\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${({ active, theme }) =>\r\n    active ? theme.color.accent : 'transparent'};\r\n  color: ${({ active, theme }) => (active ? theme.color.background : 'white')};\r\n  transition: all 0.2s;\r\n`\r\n","import React, { useContext } from 'react'\r\nimport LanguageContext from 'context/LanguageContext'\r\nimport ReactGA from 'react-ga'\r\nimport { LANGUAGES } from 'Constants'\r\nimport { Button } from './styles'\r\n\r\nconst LanguageSelector = () => {\r\n  const { language, setLanguage } = useContext(LanguageContext)\r\n  const languages = Object.keys(LANGUAGES)\r\n\r\n  const defineLanguage = (locale) => {\r\n    setLanguage(locale)\r\n    if (process.env.NODE_ENV === 'production') {\r\n      ReactGA.event({\r\n        category: 'User',\r\n        action: 'Toggle Language',\r\n        value: locale\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderButton = (key) => {\r\n    const value = LANGUAGES[key]\r\n    return (\r\n      <Button\r\n        key={key}\r\n        onClick={() => defineLanguage(value)}\r\n        active={value === language}\r\n      >\r\n        {value}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <div>{languages.map(renderButton)}</div>\r\n}\r\n\r\nexport default LanguageSelector\r\n","import React from 'react'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport Avatar from 'components/Avatar'\r\nimport Flex from 'components/Flex'\r\nimport Typo, { Title as TitleComponent } from 'components/Typo'\r\nimport useI18n from '../hooks/useI18n'\r\nimport { getExperience } from '../utils/dateUtil'\r\nimport LanguageSelector from 'components/LanguageSelector'\r\n\r\nconst Container = styled(Flex)`\r\n  align-items: center;\r\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\r\n    min-height: 30rem;\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst Title = styled(TitleComponent)`\r\n  width: fit-content;\r\n`\r\n\r\nconst Text = styled(Typo)`\r\n  margin-top: ${({ theme }) => theme.spacing.medium};\r\n`\r\n\r\nconst Bio = () => {\r\n  const { __ } = useI18n()\r\n  const theme = useTheme()\r\n  const count = getExperience()\r\n  return (\r\n    <Flex backgroundColor={theme.color.darkBackground}>\r\n      <LanguageSelector />\r\n      <Container>\r\n        <Flex maxWidth=\"30rem\">\r\n          <Title>{__('greeting')}</Title>\r\n          <Text>{__('greeting.bio', { count })}</Text>\r\n        </Flex>\r\n        <Flex>\r\n          <Avatar username=\"mesaquen\" />\r\n        </Flex>\r\n      </Container>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","export const getExperience = () => {\r\n  const startingDate = new Date('2013-05-01')\r\n  const startingYear = startingDate.getFullYear()\r\n  const now = new Date()\r\n  return now.getFullYear() - startingYear\r\n}\r\n","import React from 'react'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { FaLinkedin, FaGithub, FaDev } from 'react-icons/fa'\r\nimport Flex from 'components/Flex'\r\nimport LinkComponent from 'components/Link'\r\nimport { PROFILES_LINKS } from 'Constants'\r\n\r\nconst Link = styled(LinkComponent)`\r\n  ${({ theme, spaceAround }) =>\r\n    spaceAround ? `padding: 0 ${theme.spacing.default};` : ''}\r\n`\r\n\r\nconst Contact = () => {\r\n  const theme = useTheme()\r\n  const iconSize = theme.sizing(4)\r\n  return (\r\n    <Flex\r\n      backgroundColor={theme.color.darkBackground}\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Link href={PROFILES_LINKS.LINKED_IN} target=\"_blank\">\r\n        <FaLinkedin size={iconSize} />\r\n      </Link>\r\n\r\n      <Link href={PROFILES_LINKS.DEV} target=\"_blank\" spaceAround>\r\n        <FaDev size={iconSize} />\r\n      </Link>\r\n\r\n      <Link href={PROFILES_LINKS.GITHUB} target=\"_blank\">\r\n        <FaGithub size={iconSize} />\r\n      </Link>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst useTypingMachine = (\r\n  words,\r\n  options = { typeDelay: 200, wordDelay: 2000 }\r\n) => {\r\n  const { typeDelay, wordDelay } = options\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [display, setDisplay] = useState('')\r\n  const [delta, setDelta] = useState(typeDelay)\r\n\r\n  useEffect(() => {\r\n    const index = currentIndex % words.length\r\n    const fullText = words[index]\r\n\r\n    const nextCharIndex = isDeleting ? display.length - 1 : display.length + 1\r\n    let nextDelta = parseInt(typeDelay - Math.random() * 100)\r\n\r\n    if (isDeleting) {\r\n      nextDelta /= 2\r\n    }\r\n\r\n    setDelta(nextDelta)\r\n    if (!isDeleting && display === fullText) {\r\n      setIsDeleting(true)\r\n      setDelta(wordDelay)\r\n    } else if (isDeleting && display === '') {\r\n      setIsDeleting(false)\r\n      setCurrentIndex(currentIndex + 1)\r\n    }\r\n\r\n    const timeout = setTimeout(\r\n      () => setDisplay(fullText.substring(0, nextCharIndex)),\r\n      delta\r\n    )\r\n\r\n    return () => clearTimeout(timeout)\r\n  }, [display, currentIndex, isDeleting])\r\n\r\n  return display\r\n}\r\n\r\nexport default useTypingMachine\r\n","import styled from 'styled-components'\r\nimport { prepareRules } from '../utils/styleUtil'\r\n\r\nconst rules = prepareRules({\r\n  color: 'color',\r\n})\r\n\r\nexport const ProfileCodeText = styled.span`\r\n  font-size: ${({ theme }) => theme.sizes.L};\r\n  color: white;\r\n  font-weight: bold;\r\n  font-family: monospace;\r\n\r\n  ${rules}\r\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\r\n    font-size: ${({ theme }) => theme.sizes.XL};\r\n  }\r\n`\r\n\r\nexport const CardGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n\r\n  grid-template-columns: 1fr;\r\n\r\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.media.desktop}) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`\r\n","import React from 'react'\r\nimport Flex from '../components/Flex'\r\nimport useTypingMachine from '../hooks/useTypingMachine'\r\nimport useI18n from '../hooks/useI18n'\r\n\r\nimport { ProfileCodeText as Typo } from './PageStyles'\r\nimport Text from '../components/Typo'\r\nimport { useTheme } from 'styled-components'\r\n\r\nconst HEART = String.fromCharCode(10084)\r\n\r\nconst Profile = () => {\r\n  const theme = useTheme()\r\n  const { __ } = useI18n()\r\n\r\n  const words = [\r\n    __('react', { defaultMessage: 'React' }),\r\n    __('learning'),\r\n    __('react.native', { defaultMessage: 'React Native' }),\r\n    __('pizza', { defaultMessage: 'Pizza' }),\r\n    __('no.sql', { defaultMessage: 'NoSQL' }),\r\n    __('js', { defaultMessage: 'ECMAScript' }),\r\n    __('frontend', { defaultMessage: 'Frontend' }),\r\n    __('sharing'),\r\n    __('testing'),\r\n    __('developing'),\r\n    __('sql', { defaultMessage: 'SQL' }),\r\n  ]\r\n  const value = useTypingMachine(words)\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      direction=\"row\"\r\n      backgroundColor={theme.color.accent}\r\n    >\r\n      <Typo color={theme.color.background}>{`I ${HEART} { ${value} }`}</Typo>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import styled from 'styled-components'\r\nimport Flex from 'components/Flex'\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: ${({ theme }) => theme.color.background};\r\n  box-shadow: 0 0.125rem 0.5rem ${({ theme }) => theme.color.shadow};\r\n  padding: 1rem;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  justify-content: space-between;\r\n  min-height: 8rem;\r\n`\r\nexport const CardHeader = styled(Flex)`\r\n  padding: 0;\r\n`\r\n","import React from 'react'\r\nimport { Card, CardHeader } from './styles'\r\nimport Typo, { Subtitle } from 'components/Typo'\r\nimport { FaGithub } from 'react-icons/fa'\r\nimport Link from 'components/Link'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst Icon = styled(FaGithub)`\r\n  margin-top: 1rem;\r\n`\r\nconst ProjectCard = ({ name, html_url }) => {\r\n  return (\r\n    <Link href={html_url} target=\"_blank\">\r\n      <Card justifyContent=\"space-between\">\r\n        <CardHeader>\r\n          <Subtitle>{name}</Subtitle>\r\n        </CardHeader>\r\n        <Icon />\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ProjectCard\r\n","import { makeObservable, action, observable, computed } from 'mobx'\r\n\r\nconst sortByUpdatedAt = (a, b) => (a.updated_at > b.updated_at ? -1 : 0)\r\n\r\nclass ProjectStore {\r\n  projects = []\r\n  lastFetched = null\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projects: observable,\r\n      lastFetched: observable,\r\n      setProjects: action.bound,\r\n      setLastFetched: action.bound,\r\n      latestProjects: computed,\r\n    })\r\n  }\r\n\r\n  setProjects(projects) {\r\n    this.projects = projects\r\n  }\r\n\r\n  setLastFetched(lastFetched) {\r\n    this.lastFetched = lastFetched\r\n  }\r\n\r\n  get latestProjects() {\r\n    return this.projects.slice().sort(sortByUpdatedAt).slice(0, 10)\r\n  }\r\n}\r\n\r\nconst store = new ProjectStore()\r\n\r\nexport default store\r\n","import React, { useEffect } from 'react'\r\nimport styled, { useTheme } from 'styled-components'\r\nimport { observer } from 'mobx-react-lite'\r\nimport Flex from 'components/Flex'\r\nimport ProjectCard from 'components/ProjectCard'\r\nimport ProjectsStore from 'mobx/ProjectsStore'\r\nimport { fetchUserRepos } from 'logic/UserLogic'\r\nimport { CardGrid } from './PageStyles'\r\nimport { Subtitle } from 'components/Typo'\r\nimport useI18n from 'hooks/useI18n'\r\nconst Text = styled(Subtitle)`\r\n  margin-bottom: ${({ theme }) => theme.spacing.default};\r\n`\r\n\r\nconst Projects = observer(() => {\r\n  const { latestProjects, lastFetched } = ProjectsStore\r\n  const { __ } = useI18n()\r\n\r\n  useEffect(() => {\r\n    fetchUserRepos('mesaquen').then((repos) => {\r\n      ProjectsStore.setProjects(repos)\r\n      ProjectsStore.setLastFetched(new Date())\r\n    })\r\n  }, [])\r\n\r\n  const renderItem = (item) => <ProjectCard key={item.id} {...item} />\r\n\r\n  return (\r\n    <Flex>\r\n      <Text>{__('recent.projects')}</Text>\r\n      <CardGrid>{latestProjects.map(renderItem)}</CardGrid>\r\n    </Flex>\r\n  )\r\n})\r\n\r\nexport default Projects\r\n","import React from 'react'\r\nimport Bio from './Bio'\r\nimport Contact from './Contact'\r\nimport Profile from './Profile'\r\nimport Projects from './Projects'\r\n\r\nconst AppContainer = (props) => {\r\n  return (\r\n    <div {...props}>\r\n      <Bio />\r\n      <Profile />\r\n      <Projects />\r\n      <Contact />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppContainer\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { IntlProvider as Provider } from 'react-intl'\r\nimport { DEFAULT_LOCALE, LANGUAGES } from '../../Constants'\r\nimport enUS from 'lang/en-US.json'\r\nimport ptBR from 'lang/pt-BR.json'\r\nimport LanguageContext from 'context/LanguageContext'\r\n\r\nconst IntlProvider = ({ children }) => {\r\n  const { language } = useContext(LanguageContext)\r\n  const [messages, setMessages] = useState(enUS)\r\n\r\n  useEffect(() => {\r\n    const nextMessages = language === LANGUAGES['en-US'] ? enUS : ptBR\r\n    setMessages(nextMessages)\r\n  }, [language])\r\n\r\n  return (\r\n    <Provider\r\n      locale={DEFAULT_LOCALE}\r\n      defaultLocale={DEFAULT_LOCALE}\r\n      messages={messages}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default IntlProvider\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nh1 {\r\n    background: ${({ theme }) => theme.color.accent};\r\n    color: ${({ theme }) => theme.color.background};\r\n}\r\n\r\nbody {\r\n    font-family: sans-serif;\r\n    color: ${(props) => props.theme.color.primaryText};\r\n    background: ${({ theme }) => theme.color.background}\r\n}\r\n\r\nhtml {\r\n    box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: inherit;\r\n}\r\n`\r\n\r\nexport default GlobalStyle\r\n","const theme = {\r\n  sizes: {\r\n    XL: '2.5rem',\r\n    L: '1.25rem',\r\n    M: '1rem',\r\n    S: '0.75rem',\r\n    XS: '0.5rem',\r\n    XXS: '0.25rem',\r\n  },\r\n\r\n  media: {\r\n    tablet: '768px',\r\n    desktop: '900px',\r\n  },\r\n\r\n  sizing: (number = 1) => `${number}rem`,\r\n\r\n  color: {\r\n    primaryText: '#ccc',\r\n    secondaryTextIcons: '#777',\r\n    darkBackground: '#222',\r\n    background: '#444',\r\n    lightBackground: '#666',\r\n    accent: 'turquoise',\r\n    shadow: '#000A',\r\n  },\r\n  spacing: {\r\n    default: '1rem',\r\n    medium: '0.5rem',\r\n    small: '0.25',\r\n  },\r\n}\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport AppContainer from './pages/AppContainer'\r\nimport IntlProvider from './components/IntlProvider'\r\nimport GlobalStyle from './globalStyles'\r\nimport theme from './theme'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { LanguageProvider } from 'context/LanguageContext'\r\nimport ReactGA from 'react-ga'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  ReactGA.initialize('G-H711591LPV')\r\n  ReactGA.pageview(window.location.pathname + window.location.search);\r\n}\r\n\r\nconst App = () => {\r\n  return (\r\n    <LanguageProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <IntlProvider>\r\n          <GlobalStyle />\r\n          <AppContainer />\r\n        </IntlProvider>\r\n      </ThemeProvider>\r\n    </LanguageProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}