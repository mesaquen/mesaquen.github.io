{"version":3,"sources":["hooks/useI18n.js","utils/styleUtil.js","components/Flex/index.jsx","components/Typo/index.js","components/Avatar/styles.js","components/Link/index.js","Constants.js","utils/ResponseHandler.js","utils/logger.js","components/Avatar/index.jsx","logic/UserLogic.js","context/LanguageContext.js","components/LanguageSelector/styles.js","components/LanguageSelector/index.jsx","pages/Bio.jsx","utils/dateUtil.js","pages/Contact.jsx","hooks/useTypingMachine.js","pages/PageStyles.js","pages/Profile.jsx","components/ProjectCard/styles.js","components/ProjectCard/index.jsx","mobx/ProjectsStore.js","pages/Projects.jsx","pages/AppContainer.jsx","components/IntlProvider/index.jsx","globalStyles.js","theme.js","App.js","index.js"],"names":["useI18n","intl","useIntl","__","id","options","description","defaultMessage","rest","formatMessage","extractProp","propName","attributeName","props","value","undefined","prepareRules","config","keys","Object","map","key","rules","display","width","maxWidth","minHeight","justifyContent","alignItems","backgroundColor","direction","shrink","grow","Flex","styled","div","theme","spacing","default","defaultProps","size","Title","h1","sizes","XL","Subtitle","h2","L","Typo","p","color","secondaryTextIcons","CircleContainer","background","media","tablet","InputPlaceholder","Image","img","show","Link","a","accent","DEFAULT_LOCALE","API_URL","PROFILES_LINKS","LANGUAGES","fetchURL","url","fetch","response","ok","status","json","data","Promise","reject","logger","createLogger","format","simple","Avatar","username","useState","loading","setLoading","imageUrl","setImageUrl","useEffect","fetchUser","then","user","avatar_url","catch","error","src","onLoad","setTimeout","LanguageContext","React","createContext","LanguageProvider","children","language","setLanguage","Provider","Button","button","sizing","active","LanguageSelector","useContext","languages","onClick","Container","TitleComponent","Text","medium","Bio","useTheme","count","startingYear","Date","getFullYear","getExperience","darkBackground","LinkComponent","spaceAround","Contact","iconSize","href","target","useTypingMachine","words","typeDelay","wordDelay","currentIndex","setCurrentIndex","isDeleting","setIsDeleting","setDisplay","delta","setDelta","index","length","fullText","nextCharIndex","nextDelta","parseInt","Math","random","timeout","substring","clearTimeout","ProfileCodeText","span","CardGrid","desktop","HEART","String","fromCharCode","Profile","Card","shadow","CardHeader","Icon","FaGithub","ProjectCard","name","html_url","sortByUpdatedAt","b","updated_at","store","projects","lastFetched","makeObservable","this","observable","setProjects","action","bound","setLastFetched","latestProjects","computed","slice","sort","Projects","observer","ProjectsStore","repos","item","AppContainer","IntlProvider","enUS","messages","setMessages","ptBR","locale","defaultLocale","GlobalStyle","createGlobalStyle","primaryText","M","S","XS","XXS","number","lightBackground","small","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06486530.chunk.js","sourcesContent":["import { useIntl } from 'react-intl'\n\nconst useI18n = () => {\n  const intl = useIntl()\n\n  const getMessage = (id, options = {}) => {\n    const { description, defaultMessage, ...rest } = options\n    return intl.formatMessage({ id, description, defaultMessage }, rest)\n  }\n  return { __: getMessage }\n}\n\nexport default useI18n\n","export const extractProp = (propName, attributeName) => (props) => {\n  const value = props[propName]\n  if (value !== undefined) {\n    return `${attributeName}: ${value};`\n  }\n\n  return ''\n}\n\nexport const prepareRules = (config = {}) => {\n  const keys = Object.keys(config)\n  return keys.map((key) => extractProp(key, config[key]))\n}\n","import styled from 'styled-components'\nimport { prepareRules } from '../../utils/styleUtil'\n\nconst rules = prepareRules({\n  display: 'display',\n  width: 'width',\n  maxWidth: 'max-width',\n  minHeight: 'min-height',\n  justifyContent: 'justify-content',\n  alignItems: 'align-items',\n  backgroundColor: 'background-color',\n  direction: 'flex-direction',\n  shrink: 'flex-shrink',\n  grow: 'flex-grow',\n})\n\nconst Flex = styled.div`\n  padding: ${(props) => props.theme.spacing.default};\n  ${rules}\n`\n\nFlex.defaultProps = {\n  direction: 'column',\n  display: 'flex',\n}\n\nexport default Flex\n","import styled from 'styled-components'\nimport { prepareRules } from '../../utils/styleUtil'\n\nconst rules = prepareRules({\n  size: 'font-size',\n})\nexport const Title = styled.h1`\n  font-size: ${(props) => props.theme.sizes.XL};\n  ${rules}\n`\n\nexport const Subtitle = styled.h2`\n  font-size: ${(props) => props.theme.sizes.L};\n  ${rules}\n`\n\nconst Typo = styled.p`\n  color: ${(props) => props.theme.color.secondaryTextIcons};\n  ${rules}\n`\n\nexport default Typo\n","import styled from 'styled-components'\nimport Flex from '../Flex'\n\nexport const CircleContainer = styled(Flex)`\n  padding: 0;\n  background: ${({ theme }) => theme.color.background};\n  border-radius: 50%;\n  overflow: hidden;\n\n  width: 50vw;\n  height: 50vw;\n\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\n    width: 15rem;\n    height: 15rem;\n  }\n\n  margin-bottom: ${({ theme }) => theme.spacing.default};\n`\n\nexport const InputPlaceholder = styled(Flex)`\n  margin-top: ${({ theme }) => theme.spacing.default};\n  width: 15rem;\n  background: ${({ theme }) => theme.color.background};\n`\n\nexport const Image = styled.img`\n  display: ${(props) => (props.show ? 'block' : 'none')};\n  width: 50vw;\n  height: 50vw;\n\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\n    width: 15rem;\n    height: 15rem;\n  }\n`\n","import styled from 'styled-components'\n\nconst Link = styled.a`\n  color: ${({ theme }) => theme.color.secondaryTextIcons};\n  text-decoration: none;\n  transition: all 0.15s ease-in-out;\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme }) => theme.color.accent};\n    text-decoration: underline;\n  }\n`\n\nexport default Link\n","export const DEFAULT_LOCALE = 'en-US'\n\nexport const API_URL = 'https://api.github.com'\n\nexport const PROFILES_LINKS = {\n  LINKED_IN: 'https://linkedin.com/in/mesaquen',\n  GITHUB: 'https://github.com/mesaquen',\n  DEV: 'https://dev.to/mesaquen',\n}\n\nexport const LANGUAGES = {\n  'pt-BR': 'pt-BR',\n  'en-US': 'en-US',\n}\n","export const fetchURL = async (url, options) => {\n  const response = await fetch(url, options)\n  const { ok, status } = response\n  const data = await response.json()\n\n  if (ok) {\n    return data\n  }\n\n  return Promise.reject({ ok, status, ...data })\n}\n","import { createLogger, format, transports } from 'winston'\n\nconst logger = createLogger({\n  format: format.simple(),\n})\n\nif (process.env.NODE_ENV !== 'production') {\n  logger.add(new transports.Console())\n}\n\nexport default logger\n","import React, { useEffect, useState } from 'react'\nimport Flex from '../Flex'\nimport { Subtitle as Typo } from '../Typo'\nimport { CircleContainer, InputPlaceholder, Image } from './styles'\nimport Link from '../Link'\nimport { fetchUser } from '../../logic/UserLogic'\nimport logger from '../../utils/logger'\n\nconst Avatar = ({ username, ...props }) => {\n  const [loading, setLoading] = useState(true)\n  const [imageUrl, setImageUrl] = useState('')\n\n  useEffect(() => {\n    fetchUser(username)\n      .then((user) => {\n        setImageUrl(user?.avatar_url)\n      })\n      .catch(logger.error)\n  }, [username])\n\n  return (\n    <Flex alignItems=\"center\">\n      <CircleContainer>\n        <Image\n          src={imageUrl}\n          onLoad={() => setTimeout(() => setLoading(false), 1000)}\n          show={!loading}\n        />\n      </CircleContainer>\n      {loading ? (\n        <InputPlaceholder />\n      ) : (\n        <Link>\n          <Typo>{`@${username}`}</Typo>\n        </Link>\n      )}\n    </Flex>\n  )\n}\n\nexport default Avatar\n","import { API_URL } from '../Constants'\nimport { fetchURL } from '../utils/ResponseHandler'\n\nexport const fetchUser = (username) => fetchURL(`${API_URL}/users/${username}`)\n\nexport const fetchUserRepos = (username) =>\n  fetchURL(`${API_URL}/users/${username}/repos`)\n","import React, { useState } from 'react'\nimport { DEFAULT_LOCALE } from 'Constants'\n\nconst LanguageContext = React.createContext(DEFAULT_LOCALE)\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState(DEFAULT_LOCALE)\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  )\n}\n\nexport default LanguageContext\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  padding: ${({ theme }) => theme.sizing(0.5)};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: ${({ active, theme }) =>\n    active ? theme.color.accent : 'transparent'};\n  color: ${({ active, theme }) => (active ? theme.color.background : 'white')};\n  transition: all 0.2s;\n`\n","import React, { useContext } from 'react'\nimport LanguageContext from 'context/LanguageContext'\nimport { LANGUAGES } from 'Constants'\nimport { Button } from './styles'\n\nconst LanguageSelector = () => {\n  const { language, setLanguage } = useContext(LanguageContext)\n  const languages = Object.keys(LANGUAGES)\n\n  const defineLanguage = (locale) => setLanguage(locale)\n\n  const renderButton = (key) => {\n    const value = LANGUAGES[key]\n    return (\n      <Button\n        key={key}\n        onClick={() => defineLanguage(value)}\n        active={value === language}\n      >\n        {value}\n      </Button>\n    )\n  }\n\n  return <div>{languages.map(renderButton)}</div>\n}\n\nexport default LanguageSelector\n","import React from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport Avatar from 'components/Avatar'\nimport Flex from 'components/Flex'\nimport Typo, { Title as TitleComponent } from 'components/Typo'\nimport useI18n from '../hooks/useI18n'\nimport { getExperience } from '../utils/dateUtil'\nimport LanguageSelector from 'components/LanguageSelector'\n\nconst Container = styled(Flex)`\n  align-items: center;\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\n    min-height: 30rem;\n    max-width: 1200px;\n    width: 100%;\n    margin: 0 auto;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`\n\nconst Title = styled(TitleComponent)`\n  width: fit-content;\n`\n\nconst Text = styled(Typo)`\n  margin-top: ${({ theme }) => theme.spacing.medium};\n`\n\nconst Bio = () => {\n  const { __ } = useI18n()\n  const theme = useTheme()\n  const count = getExperience()\n  return (\n    <Flex backgroundColor={theme.color.darkBackground}>\n      <LanguageSelector />\n      <Container>\n        <Flex maxWidth=\"30rem\">\n          <Title>{__('greeting')}</Title>\n          <Text>{__('greeting.bio', { count })}</Text>\n        </Flex>\n        <Flex>\n          <Avatar username=\"mesaquen\" />\n        </Flex>\n      </Container>\n    </Flex>\n  )\n}\n\nexport default Bio\n","export const getExperience = () => {\n  const startingDate = new Date('2013-05-01')\n  const startingYear = startingDate.getFullYear()\n  const now = new Date()\n  return now.getFullYear() - startingYear\n}\n","import React from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { FaLinkedin, FaGithub, FaDev } from 'react-icons/fa'\nimport Flex from 'components/Flex'\nimport LinkComponent from 'components/Link'\nimport { PROFILES_LINKS } from 'Constants'\n\nconst Link = styled(LinkComponent)`\n  ${({ theme, spaceAround }) =>\n    spaceAround ? `padding: 0 ${theme.spacing.default};` : ''}\n`\n\nconst Contact = () => {\n  const theme = useTheme()\n  const iconSize = theme.sizing(4)\n  return (\n    <Flex\n      backgroundColor={theme.color.darkBackground}\n      direction=\"row\"\n      justifyContent=\"center\"\n    >\n      <Link href={PROFILES_LINKS.LINKED_IN} target=\"_blank\">\n        <FaLinkedin size={iconSize} />\n      </Link>\n\n      <Link href={PROFILES_LINKS.DEV} target=\"_blank\" spaceAround>\n        <FaDev size={iconSize} />\n      </Link>\n\n      <Link href={PROFILES_LINKS.GITHUB} target=\"_blank\">\n        <FaGithub size={iconSize} />\n      </Link>\n    </Flex>\n  )\n}\n\nexport default Contact\n","import { useEffect, useState } from 'react'\n\nconst useTypingMachine = (\n  words,\n  options = { typeDelay: 200, wordDelay: 2000 }\n) => {\n  const { typeDelay, wordDelay } = options\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [display, setDisplay] = useState('')\n  const [delta, setDelta] = useState(typeDelay)\n\n  useEffect(() => {\n    const index = currentIndex % words.length\n    const fullText = words[index]\n\n    const nextCharIndex = isDeleting ? display.length - 1 : display.length + 1\n    let nextDelta = parseInt(typeDelay - Math.random() * 100)\n\n    if (isDeleting) {\n      nextDelta /= 2\n    }\n\n    setDelta(nextDelta)\n    if (!isDeleting && display === fullText) {\n      setIsDeleting(true)\n      setDelta(wordDelay)\n    } else if (isDeleting && display === '') {\n      setIsDeleting(false)\n      setCurrentIndex(currentIndex + 1)\n    }\n\n    const timeout = setTimeout(\n      () => setDisplay(fullText.substring(0, nextCharIndex)),\n      delta\n    )\n\n    return () => clearTimeout(timeout)\n  }, [display, currentIndex, isDeleting])\n\n  return display\n}\n\nexport default useTypingMachine\n","import styled from 'styled-components'\nimport { prepareRules } from '../utils/styleUtil'\n\nconst rules = prepareRules({\n  color: 'color',\n})\n\nexport const ProfileCodeText = styled.span`\n  font-size: ${({ theme }) => theme.sizes.L};\n  color: white;\n  font-weight: bold;\n  font-family: monospace;\n\n  ${rules}\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\n    font-size: ${({ theme }) => theme.sizes.XL};\n  }\n`\n\nexport const CardGrid = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n\n  grid-template-columns: 1fr;\n\n  @media (min-width: ${({ theme }) => theme.media.tablet}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: ${({ theme }) => theme.media.desktop}) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`\n","import React from 'react'\nimport Flex from '../components/Flex'\nimport useTypingMachine from '../hooks/useTypingMachine'\nimport useI18n from '../hooks/useI18n'\n\nimport { ProfileCodeText as Typo } from './PageStyles'\nimport Text from '../components/Typo'\nimport { useTheme } from 'styled-components'\n\nconst HEART = String.fromCharCode(10084)\n\nconst Profile = () => {\n  const theme = useTheme()\n  const { __ } = useI18n()\n\n  const words = [\n    __('react', { defaultMessage: 'React' }),\n    __('learning'),\n    __('react.native', { defaultMessage: 'React Native' }),\n    __('pizza', { defaultMessage: 'Pizza' }),\n    __('no.sql', { defaultMessage: 'NoSQL' }),\n    __('js', { defaultMessage: 'ECMAScript' }),\n    __('frontend', { defaultMessage: 'Frontend' }),\n    __('sharing'),\n    __('testing'),\n    __('developing'),\n    __('sql', { defaultMessage: 'SQL' }),\n  ]\n  const value = useTypingMachine(words)\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      direction=\"row\"\n      backgroundColor={theme.color.accent}\n    >\n      <Typo color={theme.color.background}>{`I ${HEART} { ${value} }`}</Typo>\n    </Flex>\n  )\n}\n\nexport default Profile\n","import styled from 'styled-components'\nimport Flex from 'components/Flex'\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: ${({ theme }) => theme.color.background};\n  box-shadow: 0 0.125rem 0.5rem ${({ theme }) => theme.color.shadow};\n  padding: 1rem;\n  width: 100%;\n  margin-bottom: 1rem;\n  justify-content: space-between;\n  min-height: 8rem;\n`\nexport const CardHeader = styled(Flex)`\n  padding: 0;\n`\n","import React from 'react'\nimport { Card, CardHeader } from './styles'\nimport Typo, { Subtitle } from 'components/Typo'\nimport { FaGithub } from 'react-icons/fa'\nimport Link from 'components/Link'\n\nimport styled from 'styled-components'\n\nconst Icon = styled(FaGithub)`\n  margin-top: 1rem;\n`\nconst ProjectCard = ({ name, html_url }) => {\n  return (\n    <Link href={html_url} target=\"_blank\">\n      <Card justifyContent=\"space-between\">\n        <CardHeader>\n          <Subtitle>{name}</Subtitle>\n        </CardHeader>\n        <Icon />\n      </Card>\n    </Link>\n  )\n}\n\nexport default ProjectCard\n","import { makeObservable, action, observable, computed } from 'mobx'\n\nconst sortByUpdatedAt = (a, b) => (a.updated_at > b.updated_at ? -1 : 0)\n\nclass ProjectStore {\n  projects = []\n  lastFetched = null\n\n  constructor() {\n    makeObservable(this, {\n      projects: observable,\n      lastFetched: observable,\n      setProjects: action.bound,\n      setLastFetched: action.bound,\n      latestProjects: computed,\n    })\n  }\n\n  setProjects(projects) {\n    this.projects = projects\n  }\n\n  setLastFetched(lastFetched) {\n    this.lastFetched = lastFetched\n  }\n\n  get latestProjects() {\n    return this.projects.slice().sort(sortByUpdatedAt).slice(0, 10)\n  }\n}\n\nconst store = new ProjectStore()\n\nexport default store\n","import React, { useEffect } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { observer } from 'mobx-react-lite'\nimport Flex from 'components/Flex'\nimport ProjectCard from 'components/ProjectCard'\nimport ProjectsStore from 'mobx/ProjectsStore'\nimport { fetchUserRepos } from 'logic/UserLogic'\nimport { CardGrid } from './PageStyles'\nimport { Subtitle } from 'components/Typo'\nimport useI18n from 'hooks/useI18n'\nconst Text = styled(Subtitle)`\n  margin-bottom: ${({ theme }) => theme.spacing.default};\n`\n\nconst Projects = observer(() => {\n  const { latestProjects, lastFetched } = ProjectsStore\n  const { __ } = useI18n()\n\n  useEffect(() => {\n    fetchUserRepos('mesaquen').then((repos) => {\n      ProjectsStore.setProjects(repos)\n      ProjectsStore.setLastFetched(new Date())\n    })\n  }, [])\n\n  const renderItem = (item) => <ProjectCard key={item.id} {...item} />\n\n  return (\n    <Flex>\n      <Text>{__('recent.projects')}</Text>\n      <CardGrid>{latestProjects.map(renderItem)}</CardGrid>\n    </Flex>\n  )\n})\n\nexport default Projects\n","import React from 'react'\nimport useI18n from '../hooks/useI18n'\nimport Bio from './Bio'\nimport Contact from './Contact'\nimport Profile from './Profile'\nimport Projects from './Projects'\n\nconst AppContainer = (props) => {\n  const { __ } = useI18n()\n  return (\n    <div {...props}>\n      <Bio />\n      <Profile />\n      <Projects />\n      <Contact />\n    </div>\n  )\n}\n\nexport default AppContainer\n","import React, { useContext, useEffect, useState } from 'react'\nimport { IntlProvider as Provider } from 'react-intl'\nimport { DEFAULT_LOCALE, LANGUAGES } from '../../Constants'\nimport enUS from 'lang/en-US.json'\nimport ptBR from 'lang/pt-BR.json'\nimport LanguageContext from 'context/LanguageContext'\n\nconst IntlProvider = ({ children }) => {\n  const { language } = useContext(LanguageContext)\n  const [messages, setMessages] = useState(enUS)\n\n  useEffect(() => {\n    const nextMessages = language === LANGUAGES['en-US'] ? enUS : ptBR\n    setMessages(nextMessages)\n  }, [language])\n\n  return (\n    <Provider\n      locale={DEFAULT_LOCALE}\n      defaultLocale={DEFAULT_LOCALE}\n      messages={messages}\n    >\n      {children}\n    </Provider>\n  )\n}\n\nexport default IntlProvider\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n* {\n    margin: 0;\n    padding: 0;\n}\n\nh1 {\n    background: ${({ theme }) => theme.color.accent};\n    color: ${({ theme }) => theme.color.background};\n}\n\nbody {\n    font-family: sans-serif;\n    color: ${(props) => props.theme.color.primaryText};\n    background: ${({ theme }) => theme.color.background}\n}\n\nhtml {\n    box-sizing: border-box;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n`\n\nexport default GlobalStyle\n","const theme = {\n  sizes: {\n    XL: '2.5rem',\n    L: '1.25rem',\n    M: '1rem',\n    S: '0.75rem',\n    XS: '0.5rem',\n    XXS: '0.25rem',\n  },\n\n  media: {\n    tablet: '768px',\n    desktop: '900px',\n  },\n\n  sizing: (number = 1) => `${number}rem`,\n\n  color: {\n    primaryText: '#ccc',\n    secondaryTextIcons: '#777',\n    darkBackground: '#222',\n    background: '#444',\n    lightBackground: '#666',\n    accent: 'turquoise',\n    shadow: '#000A',\n  },\n  spacing: {\n    default: '1rem',\n    medium: '0.5rem',\n    small: '0.25',\n  },\n}\n\nexport default theme\n","import React from 'react'\nimport AppContainer from './pages/AppContainer'\nimport IntlProvider from './components/IntlProvider'\nimport GlobalStyle from './globalStyles'\nimport theme from './theme'\nimport { ThemeProvider } from 'styled-components'\nimport { LanguageProvider } from 'context/LanguageContext'\n\nconst App = () => {\n  return (\n    <LanguageProvider>\n      <ThemeProvider theme={theme}>\n        <IntlProvider>\n          <GlobalStyle />\n          <AppContainer />\n        </IntlProvider>\n      </ThemeProvider>\n    </LanguageProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}